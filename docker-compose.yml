services:
  pocketmine:
    build:
      context: ./pocketmine
    image: pocketmine-server:latest
    container_name: pocketmine-server
    ports:
      - "19132:19132/udp"
    environment:
      MYSQL_HOST: mariadb
      MYSQL_PORT: 3306
      MYSQL_DB: mc_server
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    volumes:
      - "./pocketmine/data/worlds:/pocketmine/worlds/"
      - "./pocketmine/data/players:/pocketmine/players/"
    depends_on:
      - mariadb
    networks:
      - bdd
    develop:
      watch:
        - action: sync
          path: ./pocketmine
          target: /pocketmine

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: test
    volumes:
      - ./data/db:/var/lib/mysql
      - mysqlsock:/run/mysqld
    networks:
      - bdd

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_SOCKET: /run/mysqld/mysqld.sock
    volumes:
      - mysqlsock:/run/mysqld
    networks:
      - bdd

  nextjs:
    build:
      context: ./web
    container_name: nextjs
    ports:
      - "3000:3000"
    environment:
      DB_URL: "mariadb://root:root@mariadb:3306/mc_server"
    depends_on:
      - mariadb
    networks:
      - bdd
    develop:
      watch:
        - action: sync
          path: ./web/app
          ignore:
            - node_modules/

  discordbot:
    build:
      context: ./discord-bot
    container_name: discordbot
    environment:
      DB_URL: "mariadb://root:root@mariadb:3306/mc_server"
    depends_on:
      - mariadb
    networks:
      - bdd
    develop:
      watch:
        - action: sync
          path: ./discord-bot
          ignore:
            - package.json

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./server-web/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nextjs
    networks:
      - bdd

networks:
  bdd:
    driver: bridge

volumes:
  mysqlsock:
